# -*- coding: utf-8 -*-
"""Proyek_Akhir.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y0kFeOGw45SKHYPrtXxx3Izz2_-tcTkZ

# Proyek Analisis Data: Bike Sharing Analysis
- Nama:Sopyan
- Email:sopyanwae60@gmail.com
- Id Dicoding:sopyan_wae

## Menentukan Pertanyaan Bisnis

- pertanyaan 1 : Bagaimana variasi ketersediaan sepeda berdasarkan kondisi cuaca (weathersit) pada hari-hari tertentu? Apakah cuaca yang baik memengaruhi peningkatan penyewaan?
- Pertanyaan 2 : Bagaimana tren jumlah penyewaan sepeda per bulan dari Januari 2011 hingga Desember 2012?
- pertanyaan 3 : Bagaimana hubungan antara suhu (temp) dan jumlah penyewaan sepeda harian? Apakah terdapat tren atau pola tertentu?
- pertanyaan 4 : Apakah ada perbedaan antara distribusi penyewaan sepeda antara weekend dan weekdays?
- pertanyaan 5 : Bagaimana kontribusi pengguna casual dan registered terhadap total penyewaan sepeda?
- Pertanyaan 6 : Bagaimana performa atau tren peminjaman dalam periode satu tahun terakhir?

## Menyiapkan semua library yang dibuthkan
"""
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Function to load data with error handling
def load_data(file_path):
    try:
        data = pd.read_csv(file_path)
        data['dteday'] = pd.to_datetime(data['dteday'])
        return data
    except FileNotFoundError:
        st.error("File not found. Please check the file path.")
    except pd.errors.ParserError:
        st.error("Error parsing the file. Please check the file format.")
    return None

# Load the dataset
all_df = load_data("all_data.csv")
if all_df is not None:
    # Question 1: Variation in bike availability based on weather conditions
    def plot_weather_variation(data):
        plt.figure(figsize=(10, 5))
        sns.barplot(
            y="cnt",
            x="weathersit",
            data=data,
            hue="weathersit",
            palette="viridis"
        )
        plt.title("Variasi Ketersediaan Sepeda Berdasarkan Kondisi Cuaca", fontsize=15)
        plt.ylabel("Jumlah Penyewaan")
        plt.xlabel("Kondisi Cuaca")
        plt.tick_params(axis='x', labelsize=12)
        st.pyplot(plt)

    # Call the function to generate the plot for question 1
    plot_weather_variation(all_df)

    # Question 2: Monthly rental trends from January 2011 to December 2012
    def plot_monthly_trends(data):
        bulanan = data.groupby(pd.Grouper(key='dteday', freq='M')).sum()
        plt.figure(figsize=(10, 3))
        plt.plot(bulanan.index, bulanan['cnt'], marker='o', linestyle='-')
        plt.title('Total Peminjaman Sepeda Bulanan (Tahun 2011 - Tahun 2012)')
        plt.xlabel('Bulan')
        plt.ylabel('Jumlah Penyewaan')
        plt.grid(True)
        st.pyplot(plt)

    # Call the function to generate the plot for question 2
    plot_monthly_trends(all_df)

    # Question 3: Relationship between temperature and bike rentals
    def plot_temp_relationship(data):
        plt.figure(figsize=(10, 5))
        sns.scatterplot(
            y="cnt",
            x="temp",
            data=data
        )
        plt.title("Hubungan Antara Suhu dan Jumlah Penyewaan Sepeda Harian", fontsize=15)
        plt.ylabel("Jumlah Penyewaan")
        plt.xlabel("Suhu")
        plt.tick_params(axis='x', labelsize=12)
        st.pyplot(plt)

    # Call the function to generate the plot for question 3
    plot_temp_relationship(all_df)

    # Question 4: Bike rental distribution between weekends and weekdays
    def plot_weekend_vs_weekday(data):
        plt.figure(figsize=(10, 5))
        sns.barplot(
            x="holiday",
            y="cnt",
            data=data,
            hue="holiday",
            dodge=True,
            palette="viridis"
        )
        plt.title("Distribusi Penyewaan Sepeda pada Weekend dan Weekdays", fontsize=15)
        plt.ylabel("Jumlah Penyewaan")
        plt.xlabel("Weekend (1: Ya, 0: Tidak)")
        plt.legend(title="Status Hari Libur")
        st.pyplot(plt)

    # Call the function to generate the plot for question 4
    plot_weekend_vs_weekday(all_df)

    # Question 5: Casual and registered user contributions
    def plot_user_contributions(data):
        plt.figure(figsize=(10, 5))
        sns.barplot(
            data=data,
            x='weekday',
            y='cnt',
            hue='yr',
            palette='viridis'
        )
        plt.title('Kontribusi Pengguna Casual dan Registered Terhadap Total Penyewaan per Tahun')
        plt.xlabel('Hari dalam Seminggu')
        plt.ylabel('Jumlah Penyewaan')
        st.pyplot(plt)

    # Call the function to generate the plot for question 5
    plot_user_contributions(all_df)

    # Question 6: Performance in the last year
    def plot_last_year_performance(data):
        data = data[data['yr'] == 1]
        bulan = data.groupby(pd.Grouper(key='dteday', freq='M')).sum()
        plt.figure(figsize=(11, 4))
        plt.plot(bulan.index, bulan['cnt'], marker='o', linestyle='-')
        plt.xticks(bulan.index, bulan.index.strftime('%b'))
        plt.title('Performa Peminjaman Sepeda Setahun Terakhir')
        plt.xlabel('Bulan')
        plt.ylabel('Jumlah Penyewaan')
        plt.grid(True)
        st.pyplot(plt)

    # Call the function to generate the plot for question 6
    plot_last_year_performance(all_df)
